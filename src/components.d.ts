/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */

import '@stencil/core';

declare global {
  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {}
  }
  namespace JSXElements {}

  interface HTMLElement {
    componentOnReady?: () => Promise<this | null>;
  }

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}
}

import '@ionic/core';
import 'ionicons';


declare global {

  namespace StencilComponents {
    interface AppStencil {

    }
  }

  interface HTMLAppStencilElement extends StencilComponents.AppStencil, HTMLStencilElement {}

  var HTMLAppStencilElement: {
    prototype: HTMLAppStencilElement;
    new (): HTMLAppStencilElement;
  };
  interface HTMLElementTagNameMap {
    'app-stencil': HTMLAppStencilElement;
  }
  interface ElementTagNameMap {
    'app-stencil': HTMLAppStencilElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'app-stencil': JSXElements.AppStencilAttributes;
    }
  }
  namespace JSXElements {
    export interface AppStencilAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface PageActionSheet {

    }
  }

  interface HTMLPageActionSheetElement extends StencilComponents.PageActionSheet, HTMLStencilElement {}

  var HTMLPageActionSheetElement: {
    prototype: HTMLPageActionSheetElement;
    new (): HTMLPageActionSheetElement;
  };
  interface HTMLElementTagNameMap {
    'page-action-sheet': HTMLPageActionSheetElement;
  }
  interface ElementTagNameMap {
    'page-action-sheet': HTMLPageActionSheetElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-action-sheet': JSXElements.PageActionSheetAttributes;
    }
  }
  namespace JSXElements {
    export interface PageActionSheetAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface PageAlert {

    }
  }

  interface HTMLPageAlertElement extends StencilComponents.PageAlert, HTMLStencilElement {}

  var HTMLPageAlertElement: {
    prototype: HTMLPageAlertElement;
    new (): HTMLPageAlertElement;
  };
  interface HTMLElementTagNameMap {
    'page-alert': HTMLPageAlertElement;
  }
  interface ElementTagNameMap {
    'page-alert': HTMLPageAlertElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-alert': JSXElements.PageAlertAttributes;
    }
  }
  namespace JSXElements {
    export interface PageAlertAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface PageAvatar {

    }
  }

  interface HTMLPageAvatarElement extends StencilComponents.PageAvatar, HTMLStencilElement {}

  var HTMLPageAvatarElement: {
    prototype: HTMLPageAvatarElement;
    new (): HTMLPageAvatarElement;
  };
  interface HTMLElementTagNameMap {
    'page-avatar': HTMLPageAvatarElement;
  }
  interface ElementTagNameMap {
    'page-avatar': HTMLPageAvatarElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-avatar': JSXElements.PageAvatarAttributes;
    }
  }
  namespace JSXElements {
    export interface PageAvatarAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface PageBadge {

    }
  }

  interface HTMLPageBadgeElement extends StencilComponents.PageBadge, HTMLStencilElement {}

  var HTMLPageBadgeElement: {
    prototype: HTMLPageBadgeElement;
    new (): HTMLPageBadgeElement;
  };
  interface HTMLElementTagNameMap {
    'page-badge': HTMLPageBadgeElement;
  }
  interface ElementTagNameMap {
    'page-badge': HTMLPageBadgeElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-badge': JSXElements.PageBadgeAttributes;
    }
  }
  namespace JSXElements {
    export interface PageBadgeAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface PageButton {

    }
  }

  interface HTMLPageButtonElement extends StencilComponents.PageButton, HTMLStencilElement {}

  var HTMLPageButtonElement: {
    prototype: HTMLPageButtonElement;
    new (): HTMLPageButtonElement;
  };
  interface HTMLElementTagNameMap {
    'page-button': HTMLPageButtonElement;
  }
  interface ElementTagNameMap {
    'page-button': HTMLPageButtonElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-button': JSXElements.PageButtonAttributes;
    }
  }
  namespace JSXElements {
    export interface PageButtonAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface PageCard {

    }
  }

  interface HTMLPageCardElement extends StencilComponents.PageCard, HTMLStencilElement {}

  var HTMLPageCardElement: {
    prototype: HTMLPageCardElement;
    new (): HTMLPageCardElement;
  };
  interface HTMLElementTagNameMap {
    'page-card': HTMLPageCardElement;
  }
  interface ElementTagNameMap {
    'page-card': HTMLPageCardElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-card': JSXElements.PageCardAttributes;
    }
  }
  namespace JSXElements {
    export interface PageCardAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface PageCheckbox {

    }
  }

  interface HTMLPageCheckboxElement extends StencilComponents.PageCheckbox, HTMLStencilElement {}

  var HTMLPageCheckboxElement: {
    prototype: HTMLPageCheckboxElement;
    new (): HTMLPageCheckboxElement;
  };
  interface HTMLElementTagNameMap {
    'page-checkbox': HTMLPageCheckboxElement;
  }
  interface ElementTagNameMap {
    'page-checkbox': HTMLPageCheckboxElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-checkbox': JSXElements.PageCheckboxAttributes;
    }
  }
  namespace JSXElements {
    export interface PageCheckboxAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface PageChip {

    }
  }

  interface HTMLPageChipElement extends StencilComponents.PageChip, HTMLStencilElement {}

  var HTMLPageChipElement: {
    prototype: HTMLPageChipElement;
    new (): HTMLPageChipElement;
  };
  interface HTMLElementTagNameMap {
    'page-chip': HTMLPageChipElement;
  }
  interface ElementTagNameMap {
    'page-chip': HTMLPageChipElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-chip': JSXElements.PageChipAttributes;
    }
  }
  namespace JSXElements {
    export interface PageChipAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface PageContent {

    }
  }

  interface HTMLPageContentElement extends StencilComponents.PageContent, HTMLStencilElement {}

  var HTMLPageContentElement: {
    prototype: HTMLPageContentElement;
    new (): HTMLPageContentElement;
  };
  interface HTMLElementTagNameMap {
    'page-content': HTMLPageContentElement;
  }
  interface ElementTagNameMap {
    'page-content': HTMLPageContentElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-content': JSXElements.PageContentAttributes;
    }
  }
  namespace JSXElements {
    export interface PageContentAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface PageDatetime {

    }
  }

  interface HTMLPageDatetimeElement extends StencilComponents.PageDatetime, HTMLStencilElement {}

  var HTMLPageDatetimeElement: {
    prototype: HTMLPageDatetimeElement;
    new (): HTMLPageDatetimeElement;
  };
  interface HTMLElementTagNameMap {
    'page-datetime': HTMLPageDatetimeElement;
  }
  interface ElementTagNameMap {
    'page-datetime': HTMLPageDatetimeElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-datetime': JSXElements.PageDatetimeAttributes;
    }
  }
  namespace JSXElements {
    export interface PageDatetimeAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface PageFab {

    }
  }

  interface HTMLPageFabElement extends StencilComponents.PageFab, HTMLStencilElement {}

  var HTMLPageFabElement: {
    prototype: HTMLPageFabElement;
    new (): HTMLPageFabElement;
  };
  interface HTMLElementTagNameMap {
    'page-fab': HTMLPageFabElement;
  }
  interface ElementTagNameMap {
    'page-fab': HTMLPageFabElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-fab': JSXElements.PageFabAttributes;
    }
  }
  namespace JSXElements {
    export interface PageFabAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface PageGrid {

    }
  }

  interface HTMLPageGridElement extends StencilComponents.PageGrid, HTMLStencilElement {}

  var HTMLPageGridElement: {
    prototype: HTMLPageGridElement;
    new (): HTMLPageGridElement;
  };
  interface HTMLElementTagNameMap {
    'page-grid': HTMLPageGridElement;
  }
  interface ElementTagNameMap {
    'page-grid': HTMLPageGridElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-grid': JSXElements.PageGridAttributes;
    }
  }
  namespace JSXElements {
    export interface PageGridAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface PageHideWhen {

    }
  }

  interface HTMLPageHideWhenElement extends StencilComponents.PageHideWhen, HTMLStencilElement {}

  var HTMLPageHideWhenElement: {
    prototype: HTMLPageHideWhenElement;
    new (): HTMLPageHideWhenElement;
  };
  interface HTMLElementTagNameMap {
    'page-hide-when': HTMLPageHideWhenElement;
  }
  interface ElementTagNameMap {
    'page-hide-when': HTMLPageHideWhenElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-hide-when': JSXElements.PageHideWhenAttributes;
    }
  }
  namespace JSXElements {
    export interface PageHideWhenAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface PageIcon {

    }
  }

  interface HTMLPageIconElement extends StencilComponents.PageIcon, HTMLStencilElement {}

  var HTMLPageIconElement: {
    prototype: HTMLPageIconElement;
    new (): HTMLPageIconElement;
  };
  interface HTMLElementTagNameMap {
    'page-icon': HTMLPageIconElement;
  }
  interface ElementTagNameMap {
    'page-icon': HTMLPageIconElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-icon': JSXElements.PageIconAttributes;
    }
  }
  namespace JSXElements {
    export interface PageIconAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface PageImg {

    }
  }

  interface HTMLPageImgElement extends StencilComponents.PageImg, HTMLStencilElement {}

  var HTMLPageImgElement: {
    prototype: HTMLPageImgElement;
    new (): HTMLPageImgElement;
  };
  interface HTMLElementTagNameMap {
    'page-img': HTMLPageImgElement;
  }
  interface ElementTagNameMap {
    'page-img': HTMLPageImgElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-img': JSXElements.PageImgAttributes;
    }
  }
  namespace JSXElements {
    export interface PageImgAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface PageInfiniteScroll {

    }
  }

  interface HTMLPageInfiniteScrollElement extends StencilComponents.PageInfiniteScroll, HTMLStencilElement {}

  var HTMLPageInfiniteScrollElement: {
    prototype: HTMLPageInfiniteScrollElement;
    new (): HTMLPageInfiniteScrollElement;
  };
  interface HTMLElementTagNameMap {
    'page-infinite-scroll': HTMLPageInfiniteScrollElement;
  }
  interface ElementTagNameMap {
    'page-infinite-scroll': HTMLPageInfiniteScrollElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-infinite-scroll': JSXElements.PageInfiniteScrollAttributes;
    }
  }
  namespace JSXElements {
    export interface PageInfiniteScrollAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface PageInput {

    }
  }

  interface HTMLPageInputElement extends StencilComponents.PageInput, HTMLStencilElement {}

  var HTMLPageInputElement: {
    prototype: HTMLPageInputElement;
    new (): HTMLPageInputElement;
  };
  interface HTMLElementTagNameMap {
    'page-input': HTMLPageInputElement;
  }
  interface ElementTagNameMap {
    'page-input': HTMLPageInputElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-input': JSXElements.PageInputAttributes;
    }
  }
  namespace JSXElements {
    export interface PageInputAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface PageItemSliding {

    }
  }

  interface HTMLPageItemSlidingElement extends StencilComponents.PageItemSliding, HTMLStencilElement {}

  var HTMLPageItemSlidingElement: {
    prototype: HTMLPageItemSlidingElement;
    new (): HTMLPageItemSlidingElement;
  };
  interface HTMLElementTagNameMap {
    'page-item-sliding': HTMLPageItemSlidingElement;
  }
  interface ElementTagNameMap {
    'page-item-sliding': HTMLPageItemSlidingElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-item-sliding': JSXElements.PageItemSlidingAttributes;
    }
  }
  namespace JSXElements {
    export interface PageItemSlidingAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface PageItem {

    }
  }

  interface HTMLPageItemElement extends StencilComponents.PageItem, HTMLStencilElement {}

  var HTMLPageItemElement: {
    prototype: HTMLPageItemElement;
    new (): HTMLPageItemElement;
  };
  interface HTMLElementTagNameMap {
    'page-item': HTMLPageItemElement;
  }
  interface ElementTagNameMap {
    'page-item': HTMLPageItemElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-item': JSXElements.PageItemAttributes;
    }
  }
  namespace JSXElements {
    export interface PageItemAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface PageLabel {

    }
  }

  interface HTMLPageLabelElement extends StencilComponents.PageLabel, HTMLStencilElement {}

  var HTMLPageLabelElement: {
    prototype: HTMLPageLabelElement;
    new (): HTMLPageLabelElement;
  };
  interface HTMLElementTagNameMap {
    'page-label': HTMLPageLabelElement;
  }
  interface ElementTagNameMap {
    'page-label': HTMLPageLabelElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-label': JSXElements.PageLabelAttributes;
    }
  }
  namespace JSXElements {
    export interface PageLabelAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface PageList {

    }
  }

  interface HTMLPageListElement extends StencilComponents.PageList, HTMLStencilElement {}

  var HTMLPageListElement: {
    prototype: HTMLPageListElement;
    new (): HTMLPageListElement;
  };
  interface HTMLElementTagNameMap {
    'page-list': HTMLPageListElement;
  }
  interface ElementTagNameMap {
    'page-list': HTMLPageListElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-list': JSXElements.PageListAttributes;
    }
  }
  namespace JSXElements {
    export interface PageListAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface PageLoading {

    }
  }

  interface HTMLPageLoadingElement extends StencilComponents.PageLoading, HTMLStencilElement {}

  var HTMLPageLoadingElement: {
    prototype: HTMLPageLoadingElement;
    new (): HTMLPageLoadingElement;
  };
  interface HTMLElementTagNameMap {
    'page-loading': HTMLPageLoadingElement;
  }
  interface ElementTagNameMap {
    'page-loading': HTMLPageLoadingElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-loading': JSXElements.PageLoadingAttributes;
    }
  }
  namespace JSXElements {
    export interface PageLoadingAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface PageModal {

    }
  }

  interface HTMLPageModalElement extends StencilComponents.PageModal, HTMLStencilElement {}

  var HTMLPageModalElement: {
    prototype: HTMLPageModalElement;
    new (): HTMLPageModalElement;
  };
  interface HTMLElementTagNameMap {
    'page-modal': HTMLPageModalElement;
  }
  interface ElementTagNameMap {
    'page-modal': HTMLPageModalElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-modal': JSXElements.PageModalAttributes;
    }
  }
  namespace JSXElements {
    export interface PageModalAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface PageNote {

    }
  }

  interface HTMLPageNoteElement extends StencilComponents.PageNote, HTMLStencilElement {}

  var HTMLPageNoteElement: {
    prototype: HTMLPageNoteElement;
    new (): HTMLPageNoteElement;
  };
  interface HTMLElementTagNameMap {
    'page-note': HTMLPageNoteElement;
  }
  interface ElementTagNameMap {
    'page-note': HTMLPageNoteElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-note': JSXElements.PageNoteAttributes;
    }
  }
  namespace JSXElements {
    export interface PageNoteAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface PagePopover {

    }
  }

  interface HTMLPagePopoverElement extends StencilComponents.PagePopover, HTMLStencilElement {}

  var HTMLPagePopoverElement: {
    prototype: HTMLPagePopoverElement;
    new (): HTMLPagePopoverElement;
  };
  interface HTMLElementTagNameMap {
    'page-popover': HTMLPagePopoverElement;
  }
  interface ElementTagNameMap {
    'page-popover': HTMLPagePopoverElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-popover': JSXElements.PagePopoverAttributes;
    }
  }
  namespace JSXElements {
    export interface PagePopoverAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface PageRadioGroup {

    }
  }

  interface HTMLPageRadioGroupElement extends StencilComponents.PageRadioGroup, HTMLStencilElement {}

  var HTMLPageRadioGroupElement: {
    prototype: HTMLPageRadioGroupElement;
    new (): HTMLPageRadioGroupElement;
  };
  interface HTMLElementTagNameMap {
    'page-radio-group': HTMLPageRadioGroupElement;
  }
  interface ElementTagNameMap {
    'page-radio-group': HTMLPageRadioGroupElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-radio-group': JSXElements.PageRadioGroupAttributes;
    }
  }
  namespace JSXElements {
    export interface PageRadioGroupAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface PageRadio {

    }
  }

  interface HTMLPageRadioElement extends StencilComponents.PageRadio, HTMLStencilElement {}

  var HTMLPageRadioElement: {
    prototype: HTMLPageRadioElement;
    new (): HTMLPageRadioElement;
  };
  interface HTMLElementTagNameMap {
    'page-radio': HTMLPageRadioElement;
  }
  interface ElementTagNameMap {
    'page-radio': HTMLPageRadioElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-radio': JSXElements.PageRadioAttributes;
    }
  }
  namespace JSXElements {
    export interface PageRadioAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface PageRange {

    }
  }

  interface HTMLPageRangeElement extends StencilComponents.PageRange, HTMLStencilElement {}

  var HTMLPageRangeElement: {
    prototype: HTMLPageRangeElement;
    new (): HTMLPageRangeElement;
  };
  interface HTMLElementTagNameMap {
    'page-range': HTMLPageRangeElement;
  }
  interface ElementTagNameMap {
    'page-range': HTMLPageRangeElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-range': JSXElements.PageRangeAttributes;
    }
  }
  namespace JSXElements {
    export interface PageRangeAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface PageRefresher {

    }
  }

  interface HTMLPageRefresherElement extends StencilComponents.PageRefresher, HTMLStencilElement {}

  var HTMLPageRefresherElement: {
    prototype: HTMLPageRefresherElement;
    new (): HTMLPageRefresherElement;
  };
  interface HTMLElementTagNameMap {
    'page-refresher': HTMLPageRefresherElement;
  }
  interface ElementTagNameMap {
    'page-refresher': HTMLPageRefresherElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-refresher': JSXElements.PageRefresherAttributes;
    }
  }
  namespace JSXElements {
    export interface PageRefresherAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface PageReorder {

    }
  }

  interface HTMLPageReorderElement extends StencilComponents.PageReorder, HTMLStencilElement {}

  var HTMLPageReorderElement: {
    prototype: HTMLPageReorderElement;
    new (): HTMLPageReorderElement;
  };
  interface HTMLElementTagNameMap {
    'page-reorder': HTMLPageReorderElement;
  }
  interface ElementTagNameMap {
    'page-reorder': HTMLPageReorderElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-reorder': JSXElements.PageReorderAttributes;
    }
  }
  namespace JSXElements {
    export interface PageReorderAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface PageRippleEffect {

    }
  }

  interface HTMLPageRippleEffectElement extends StencilComponents.PageRippleEffect, HTMLStencilElement {}

  var HTMLPageRippleEffectElement: {
    prototype: HTMLPageRippleEffectElement;
    new (): HTMLPageRippleEffectElement;
  };
  interface HTMLElementTagNameMap {
    'page-ripple-effect': HTMLPageRippleEffectElement;
  }
  interface ElementTagNameMap {
    'page-ripple-effect': HTMLPageRippleEffectElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-ripple-effect': JSXElements.PageRippleEffectAttributes;
    }
  }
  namespace JSXElements {
    export interface PageRippleEffectAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface PageSearchbar {

    }
  }

  interface HTMLPageSearchbarElement extends StencilComponents.PageSearchbar, HTMLStencilElement {}

  var HTMLPageSearchbarElement: {
    prototype: HTMLPageSearchbarElement;
    new (): HTMLPageSearchbarElement;
  };
  interface HTMLElementTagNameMap {
    'page-searchbar': HTMLPageSearchbarElement;
  }
  interface ElementTagNameMap {
    'page-searchbar': HTMLPageSearchbarElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-searchbar': JSXElements.PageSearchbarAttributes;
    }
  }
  namespace JSXElements {
    export interface PageSearchbarAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface PageSegment {

    }
  }

  interface HTMLPageSegmentElement extends StencilComponents.PageSegment, HTMLStencilElement {}

  var HTMLPageSegmentElement: {
    prototype: HTMLPageSegmentElement;
    new (): HTMLPageSegmentElement;
  };
  interface HTMLElementTagNameMap {
    'page-segment': HTMLPageSegmentElement;
  }
  interface ElementTagNameMap {
    'page-segment': HTMLPageSegmentElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-segment': JSXElements.PageSegmentAttributes;
    }
  }
  namespace JSXElements {
    export interface PageSegmentAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface PageSelect {

    }
  }

  interface HTMLPageSelectElement extends StencilComponents.PageSelect, HTMLStencilElement {}

  var HTMLPageSelectElement: {
    prototype: HTMLPageSelectElement;
    new (): HTMLPageSelectElement;
  };
  interface HTMLElementTagNameMap {
    'page-select': HTMLPageSelectElement;
  }
  interface ElementTagNameMap {
    'page-select': HTMLPageSelectElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-select': JSXElements.PageSelectAttributes;
    }
  }
  namespace JSXElements {
    export interface PageSelectAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface PageShowWhen {

    }
  }

  interface HTMLPageShowWhenElement extends StencilComponents.PageShowWhen, HTMLStencilElement {}

  var HTMLPageShowWhenElement: {
    prototype: HTMLPageShowWhenElement;
    new (): HTMLPageShowWhenElement;
  };
  interface HTMLElementTagNameMap {
    'page-show-when': HTMLPageShowWhenElement;
  }
  interface ElementTagNameMap {
    'page-show-when': HTMLPageShowWhenElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-show-when': JSXElements.PageShowWhenAttributes;
    }
  }
  namespace JSXElements {
    export interface PageShowWhenAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface PageSkeletonText {

    }
  }

  interface HTMLPageSkeletonTextElement extends StencilComponents.PageSkeletonText, HTMLStencilElement {}

  var HTMLPageSkeletonTextElement: {
    prototype: HTMLPageSkeletonTextElement;
    new (): HTMLPageSkeletonTextElement;
  };
  interface HTMLElementTagNameMap {
    'page-skeleton-text': HTMLPageSkeletonTextElement;
  }
  interface ElementTagNameMap {
    'page-skeleton-text': HTMLPageSkeletonTextElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-skeleton-text': JSXElements.PageSkeletonTextAttributes;
    }
  }
  namespace JSXElements {
    export interface PageSkeletonTextAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface PageSlides {

    }
  }

  interface HTMLPageSlidesElement extends StencilComponents.PageSlides, HTMLStencilElement {}

  var HTMLPageSlidesElement: {
    prototype: HTMLPageSlidesElement;
    new (): HTMLPageSlidesElement;
  };
  interface HTMLElementTagNameMap {
    'page-slides': HTMLPageSlidesElement;
  }
  interface ElementTagNameMap {
    'page-slides': HTMLPageSlidesElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-slides': JSXElements.PageSlidesAttributes;
    }
  }
  namespace JSXElements {
    export interface PageSlidesAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface PageSpinner {

    }
  }

  interface HTMLPageSpinnerElement extends StencilComponents.PageSpinner, HTMLStencilElement {}

  var HTMLPageSpinnerElement: {
    prototype: HTMLPageSpinnerElement;
    new (): HTMLPageSpinnerElement;
  };
  interface HTMLElementTagNameMap {
    'page-spinner': HTMLPageSpinnerElement;
  }
  interface ElementTagNameMap {
    'page-spinner': HTMLPageSpinnerElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-spinner': JSXElements.PageSpinnerAttributes;
    }
  }
  namespace JSXElements {
    export interface PageSpinnerAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface PageSplitPane {

    }
  }

  interface HTMLPageSplitPaneElement extends StencilComponents.PageSplitPane, HTMLStencilElement {}

  var HTMLPageSplitPaneElement: {
    prototype: HTMLPageSplitPaneElement;
    new (): HTMLPageSplitPaneElement;
  };
  interface HTMLElementTagNameMap {
    'page-split-pane': HTMLPageSplitPaneElement;
  }
  interface ElementTagNameMap {
    'page-split-pane': HTMLPageSplitPaneElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-split-pane': JSXElements.PageSplitPaneAttributes;
    }
  }
  namespace JSXElements {
    export interface PageSplitPaneAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface PageStatusTap {

    }
  }

  interface HTMLPageStatusTapElement extends StencilComponents.PageStatusTap, HTMLStencilElement {}

  var HTMLPageStatusTapElement: {
    prototype: HTMLPageStatusTapElement;
    new (): HTMLPageStatusTapElement;
  };
  interface HTMLElementTagNameMap {
    'page-status-tap': HTMLPageStatusTapElement;
  }
  interface ElementTagNameMap {
    'page-status-tap': HTMLPageStatusTapElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-status-tap': JSXElements.PageStatusTapAttributes;
    }
  }
  namespace JSXElements {
    export interface PageStatusTapAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface PageTabs {

    }
  }

  interface HTMLPageTabsElement extends StencilComponents.PageTabs, HTMLStencilElement {}

  var HTMLPageTabsElement: {
    prototype: HTMLPageTabsElement;
    new (): HTMLPageTabsElement;
  };
  interface HTMLElementTagNameMap {
    'page-tabs': HTMLPageTabsElement;
  }
  interface ElementTagNameMap {
    'page-tabs': HTMLPageTabsElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-tabs': JSXElements.PageTabsAttributes;
    }
  }
  namespace JSXElements {
    export interface PageTabsAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface PageTapClick {

    }
  }

  interface HTMLPageTapClickElement extends StencilComponents.PageTapClick, HTMLStencilElement {}

  var HTMLPageTapClickElement: {
    prototype: HTMLPageTapClickElement;
    new (): HTMLPageTapClickElement;
  };
  interface HTMLElementTagNameMap {
    'page-tap-click': HTMLPageTapClickElement;
  }
  interface ElementTagNameMap {
    'page-tap-click': HTMLPageTapClickElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-tap-click': JSXElements.PageTapClickAttributes;
    }
  }
  namespace JSXElements {
    export interface PageTapClickAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface PageText {

    }
  }

  interface HTMLPageTextElement extends StencilComponents.PageText, HTMLStencilElement {}

  var HTMLPageTextElement: {
    prototype: HTMLPageTextElement;
    new (): HTMLPageTextElement;
  };
  interface HTMLElementTagNameMap {
    'page-text': HTMLPageTextElement;
  }
  interface ElementTagNameMap {
    'page-text': HTMLPageTextElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-text': JSXElements.PageTextAttributes;
    }
  }
  namespace JSXElements {
    export interface PageTextAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface PageTextarea {

    }
  }

  interface HTMLPageTextareaElement extends StencilComponents.PageTextarea, HTMLStencilElement {}

  var HTMLPageTextareaElement: {
    prototype: HTMLPageTextareaElement;
    new (): HTMLPageTextareaElement;
  };
  interface HTMLElementTagNameMap {
    'page-textarea': HTMLPageTextareaElement;
  }
  interface ElementTagNameMap {
    'page-textarea': HTMLPageTextareaElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-textarea': JSXElements.PageTextareaAttributes;
    }
  }
  namespace JSXElements {
    export interface PageTextareaAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface PageThumbnail {

    }
  }

  interface HTMLPageThumbnailElement extends StencilComponents.PageThumbnail, HTMLStencilElement {}

  var HTMLPageThumbnailElement: {
    prototype: HTMLPageThumbnailElement;
    new (): HTMLPageThumbnailElement;
  };
  interface HTMLElementTagNameMap {
    'page-thumbnail': HTMLPageThumbnailElement;
  }
  interface ElementTagNameMap {
    'page-thumbnail': HTMLPageThumbnailElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-thumbnail': JSXElements.PageThumbnailAttributes;
    }
  }
  namespace JSXElements {
    export interface PageThumbnailAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface PageToast {

    }
  }

  interface HTMLPageToastElement extends StencilComponents.PageToast, HTMLStencilElement {}

  var HTMLPageToastElement: {
    prototype: HTMLPageToastElement;
    new (): HTMLPageToastElement;
  };
  interface HTMLElementTagNameMap {
    'page-toast': HTMLPageToastElement;
  }
  interface ElementTagNameMap {
    'page-toast': HTMLPageToastElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-toast': JSXElements.PageToastAttributes;
    }
  }
  namespace JSXElements {
    export interface PageToastAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface PageToggle {

    }
  }

  interface HTMLPageToggleElement extends StencilComponents.PageToggle, HTMLStencilElement {}

  var HTMLPageToggleElement: {
    prototype: HTMLPageToggleElement;
    new (): HTMLPageToggleElement;
  };
  interface HTMLElementTagNameMap {
    'page-toggle': HTMLPageToggleElement;
  }
  interface ElementTagNameMap {
    'page-toggle': HTMLPageToggleElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-toggle': JSXElements.PageToggleAttributes;
    }
  }
  namespace JSXElements {
    export interface PageToggleAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface PageToolbar {

    }
  }

  interface HTMLPageToolbarElement extends StencilComponents.PageToolbar, HTMLStencilElement {}

  var HTMLPageToolbarElement: {
    prototype: HTMLPageToolbarElement;
    new (): HTMLPageToolbarElement;
  };
  interface HTMLElementTagNameMap {
    'page-toolbar': HTMLPageToolbarElement;
  }
  interface ElementTagNameMap {
    'page-toolbar': HTMLPageToolbarElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-toolbar': JSXElements.PageToolbarAttributes;
    }
  }
  namespace JSXElements {
    export interface PageToolbarAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface PageVirtualScroll {

    }
  }

  interface HTMLPageVirtualScrollElement extends StencilComponents.PageVirtualScroll, HTMLStencilElement {}

  var HTMLPageVirtualScrollElement: {
    prototype: HTMLPageVirtualScrollElement;
    new (): HTMLPageVirtualScrollElement;
  };
  interface HTMLElementTagNameMap {
    'page-virtual-scroll': HTMLPageVirtualScrollElement;
  }
  interface ElementTagNameMap {
    'page-virtual-scroll': HTMLPageVirtualScrollElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-virtual-scroll': JSXElements.PageVirtualScrollAttributes;
    }
  }
  namespace JSXElements {
    export interface PageVirtualScrollAttributes extends HTMLAttributes {

    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }
