/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */

import '@stencil/core';

declare global {
  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {}
  }
  namespace JSXElements {}

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;
    componentOnReady(done: (ele?: this) => void): void;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}
}

import 'ionicons';
import '@ionic/core';


declare global {

  namespace StencilComponents {
    interface AppStencil {

    }
  }

  interface HTMLAppStencilElement extends StencilComponents.AppStencil, HTMLStencilElement {}

  var HTMLAppStencilElement: {
    prototype: HTMLAppStencilElement;
    new (): HTMLAppStencilElement;
  };
  interface HTMLElementTagNameMap {
    'app-stencil': HTMLAppStencilElement;
  }
  interface ElementTagNameMap {
    'app-stencil': HTMLAppStencilElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'app-stencil': JSXElements.AppStencilAttributes;
    }
  }
  namespace JSXElements {
    export interface AppStencilAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface PageActionSheet {

    }
  }

  interface HTMLPageActionSheetElement extends StencilComponents.PageActionSheet, HTMLStencilElement {}

  var HTMLPageActionSheetElement: {
    prototype: HTMLPageActionSheetElement;
    new (): HTMLPageActionSheetElement;
  };
  interface HTMLElementTagNameMap {
    'page-action-sheet': HTMLPageActionSheetElement;
  }
  interface ElementTagNameMap {
    'page-action-sheet': HTMLPageActionSheetElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-action-sheet': JSXElements.PageActionSheetAttributes;
    }
  }
  namespace JSXElements {
    export interface PageActionSheetAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface PageAlert {

    }
  }

  interface HTMLPageAlertElement extends StencilComponents.PageAlert, HTMLStencilElement {}

  var HTMLPageAlertElement: {
    prototype: HTMLPageAlertElement;
    new (): HTMLPageAlertElement;
  };
  interface HTMLElementTagNameMap {
    'page-alert': HTMLPageAlertElement;
  }
  interface ElementTagNameMap {
    'page-alert': HTMLPageAlertElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-alert': JSXElements.PageAlertAttributes;
    }
  }
  namespace JSXElements {
    export interface PageAlertAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface PageAvatar {

    }
  }

  interface HTMLPageAvatarElement extends StencilComponents.PageAvatar, HTMLStencilElement {}

  var HTMLPageAvatarElement: {
    prototype: HTMLPageAvatarElement;
    new (): HTMLPageAvatarElement;
  };
  interface HTMLElementTagNameMap {
    'page-avatar': HTMLPageAvatarElement;
  }
  interface ElementTagNameMap {
    'page-avatar': HTMLPageAvatarElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-avatar': JSXElements.PageAvatarAttributes;
    }
  }
  namespace JSXElements {
    export interface PageAvatarAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface PageBadge {

    }
  }

  interface HTMLPageBadgeElement extends StencilComponents.PageBadge, HTMLStencilElement {}

  var HTMLPageBadgeElement: {
    prototype: HTMLPageBadgeElement;
    new (): HTMLPageBadgeElement;
  };
  interface HTMLElementTagNameMap {
    'page-badge': HTMLPageBadgeElement;
  }
  interface ElementTagNameMap {
    'page-badge': HTMLPageBadgeElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-badge': JSXElements.PageBadgeAttributes;
    }
  }
  namespace JSXElements {
    export interface PageBadgeAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface PageButton {

    }
  }

  interface HTMLPageButtonElement extends StencilComponents.PageButton, HTMLStencilElement {}

  var HTMLPageButtonElement: {
    prototype: HTMLPageButtonElement;
    new (): HTMLPageButtonElement;
  };
  interface HTMLElementTagNameMap {
    'page-button': HTMLPageButtonElement;
  }
  interface ElementTagNameMap {
    'page-button': HTMLPageButtonElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-button': JSXElements.PageButtonAttributes;
    }
  }
  namespace JSXElements {
    export interface PageButtonAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface PageCard {

    }
  }

  interface HTMLPageCardElement extends StencilComponents.PageCard, HTMLStencilElement {}

  var HTMLPageCardElement: {
    prototype: HTMLPageCardElement;
    new (): HTMLPageCardElement;
  };
  interface HTMLElementTagNameMap {
    'page-card': HTMLPageCardElement;
  }
  interface ElementTagNameMap {
    'page-card': HTMLPageCardElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-card': JSXElements.PageCardAttributes;
    }
  }
  namespace JSXElements {
    export interface PageCardAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface PageCheckbox {

    }
  }

  interface HTMLPageCheckboxElement extends StencilComponents.PageCheckbox, HTMLStencilElement {}

  var HTMLPageCheckboxElement: {
    prototype: HTMLPageCheckboxElement;
    new (): HTMLPageCheckboxElement;
  };
  interface HTMLElementTagNameMap {
    'page-checkbox': HTMLPageCheckboxElement;
  }
  interface ElementTagNameMap {
    'page-checkbox': HTMLPageCheckboxElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-checkbox': JSXElements.PageCheckboxAttributes;
    }
  }
  namespace JSXElements {
    export interface PageCheckboxAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface PageChip {

    }
  }

  interface HTMLPageChipElement extends StencilComponents.PageChip, HTMLStencilElement {}

  var HTMLPageChipElement: {
    prototype: HTMLPageChipElement;
    new (): HTMLPageChipElement;
  };
  interface HTMLElementTagNameMap {
    'page-chip': HTMLPageChipElement;
  }
  interface ElementTagNameMap {
    'page-chip': HTMLPageChipElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-chip': JSXElements.PageChipAttributes;
    }
  }
  namespace JSXElements {
    export interface PageChipAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface PageContent {

    }
  }

  interface HTMLPageContentElement extends StencilComponents.PageContent, HTMLStencilElement {}

  var HTMLPageContentElement: {
    prototype: HTMLPageContentElement;
    new (): HTMLPageContentElement;
  };
  interface HTMLElementTagNameMap {
    'page-content': HTMLPageContentElement;
  }
  interface ElementTagNameMap {
    'page-content': HTMLPageContentElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-content': JSXElements.PageContentAttributes;
    }
  }
  namespace JSXElements {
    export interface PageContentAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface PageDatetime {

    }
  }

  interface HTMLPageDatetimeElement extends StencilComponents.PageDatetime, HTMLStencilElement {}

  var HTMLPageDatetimeElement: {
    prototype: HTMLPageDatetimeElement;
    new (): HTMLPageDatetimeElement;
  };
  interface HTMLElementTagNameMap {
    'page-datetime': HTMLPageDatetimeElement;
  }
  interface ElementTagNameMap {
    'page-datetime': HTMLPageDatetimeElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-datetime': JSXElements.PageDatetimeAttributes;
    }
  }
  namespace JSXElements {
    export interface PageDatetimeAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface PageFab {

    }
  }

  interface HTMLPageFabElement extends StencilComponents.PageFab, HTMLStencilElement {}

  var HTMLPageFabElement: {
    prototype: HTMLPageFabElement;
    new (): HTMLPageFabElement;
  };
  interface HTMLElementTagNameMap {
    'page-fab': HTMLPageFabElement;
  }
  interface ElementTagNameMap {
    'page-fab': HTMLPageFabElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-fab': JSXElements.PageFabAttributes;
    }
  }
  namespace JSXElements {
    export interface PageFabAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface PageGrid {

    }
  }

  interface HTMLPageGridElement extends StencilComponents.PageGrid, HTMLStencilElement {}

  var HTMLPageGridElement: {
    prototype: HTMLPageGridElement;
    new (): HTMLPageGridElement;
  };
  interface HTMLElementTagNameMap {
    'page-grid': HTMLPageGridElement;
  }
  interface ElementTagNameMap {
    'page-grid': HTMLPageGridElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-grid': JSXElements.PageGridAttributes;
    }
  }
  namespace JSXElements {
    export interface PageGridAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface PageHideWhen {

    }
  }

  interface HTMLPageHideWhenElement extends StencilComponents.PageHideWhen, HTMLStencilElement {}

  var HTMLPageHideWhenElement: {
    prototype: HTMLPageHideWhenElement;
    new (): HTMLPageHideWhenElement;
  };
  interface HTMLElementTagNameMap {
    'page-hide-when': HTMLPageHideWhenElement;
  }
  interface ElementTagNameMap {
    'page-hide-when': HTMLPageHideWhenElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-hide-when': JSXElements.PageHideWhenAttributes;
    }
  }
  namespace JSXElements {
    export interface PageHideWhenAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface PageIcon {

    }
  }

  interface HTMLPageIconElement extends StencilComponents.PageIcon, HTMLStencilElement {}

  var HTMLPageIconElement: {
    prototype: HTMLPageIconElement;
    new (): HTMLPageIconElement;
  };
  interface HTMLElementTagNameMap {
    'page-icon': HTMLPageIconElement;
  }
  interface ElementTagNameMap {
    'page-icon': HTMLPageIconElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-icon': JSXElements.PageIconAttributes;
    }
  }
  namespace JSXElements {
    export interface PageIconAttributes extends HTMLAttributes {

    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }
